syntax = "proto3";

package bakdata.organization.proto;

message Organization {
  string identificationCode = 1;
  string registrationDate = 2;
  string lastUpdateDate = 3;
  OrganizationName name = 4;
  string acronym = 5;
  string entityForm = 6;
  string webSiteURL = 7;
  string registrationCategory = 8;
  Office headOffice = 9;
  Office EUOffice = 10;
  string goals = 11;
  repeated string levelsOfInterest = 12;
  repeated string EULegislativeProposals = 13;
  string EUSupportedForumsAndPlatforms = 14;
  repeated string communicationActivities = 15;
  string interOrUnofficalGroupings = 16;
  MemberInfo members = 17;
  string EPAccreditedNumber = 18;
  repeated string interests = 19;
  Structure structure = 20;
  string interestRepresented = 21;
  FinancialData financialData = 22;
}
message OrganizationName {
  string originalName = 1;
  optional string nameInLatinAlphabet=2;
}
message Office {
  string address = 1;
  string postCode = 2;
  string city = 3;
  string country = 4;
  Phone phone = 5;
}

message Phone {
  string indicPhone = 1;
  string phoneNumber = 2;
}

message MemberInfo {
  optional int32 members100Percent = 1;
  int32 members = 2;
  int32 membersFTE = 3;
  string infoMembers = 4;
  optional int32 members50Percent = 5;
  optional int32 members25Percent = 6;
  optional int32 members75Percent = 7;
  optional int32 members10Percent = 8;
}

message Structure {
  string isMemberOf = 1;
  repeated string organisationMembers = 2;
}

message FinancialData {
  bool newOrganisation = 1;
  Year closedYear = 2;
  Year currentYear = 3;
  optional string complementaryInformation = 4;
}

message Year {
  optional string startDate = 1;
  optional string endDate = 2;
  repeated Intermediary intermediaries = 3;
  optional Costs costs = 4;
  repeated Grant grants = 5;
  repeated Client clients = 6;
  optional Costs totalAnnualRevenue = 7;
  repeated FundingSource fundingSources = 8;
  repeated Contribution contributions = 9 ;
  optional Amount totalBudget = 10;
}
message Intermediary {
  string name = 1;
  optional RangeWrapper representationCosts = 2;
}
message Contribution {
  string name = 1;
  Amount amount = 2;
}

message FundingSource {
  string source = 1;
}

message Client {
  string name = 1;
  optional RangeWrapper revenue = 2;
  optional string proposal = 3;
}
message RangeWrapper {
  Range range = 1;
}
message Costs {
  Range range = 1;
  string currency = 2;
}

message Range {
  double min = 1;
  optional double max = 2;
}

message Grant {
  string source = 1;
  Amount amount = 2;
}

message Amount {
  double absoluteCost = 1;
}